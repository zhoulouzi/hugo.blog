<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leetcode on Blog zhoulouzi</title>
    <link>https://blog.zhoulouzi.com/tags/leetcode/</link>
    <description>Recent content in Leetcode on Blog zhoulouzi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Sep 2017 21:48:15 +0800</lastBuildDate>
    
	<atom:link href="https://blog.zhoulouzi.com/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>leetcode 笔记</title>
      <link>https://blog.zhoulouzi.com/2017/09/leetcode/</link>
      <pubDate>Tue, 05 Sep 2017 21:48:15 +0800</pubDate>
      
      <guid>https://blog.zhoulouzi.com/2017/09/leetcode/</guid>
      <description>总结出一些比较意义的题  好久没有更新自己的博客了，自从3月份跳槽到现在这几个月一直很忙，所以也一直没有时间更新，最近自己也抽空去leetcode刷题，补一补薄弱的环节。就从easy难度的开始刷起，刷完这600多道题。
 1.一个列表成员都是出现2次的整数，只有一个元素出现一次。  Given an array of integers, every element appears twice except for one. Find that single one. Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? 我的解法很平常遍历一遍列表给每个元素计数，返回值为1的元素，但是并不符合Note里提到的。于是在大神们的Solutions找到了这个答案： One-line python solution with O(n) time
def singleNumber(self, nums): &amp;quot;&amp;quot;&amp;quot; :type nums: List[int] :rtype: int &amp;quot;&amp;quot;&amp;quot; return reduce(lambda x, y: x ^ y, nums)  第一眼看，什么鬼，x 的 y次方～ 想了半天才明白 相同2个数 异或运算结果就是0 0和任意数 异或运算都是 任意数本身啊。 reduce下这个列表，完美。</description>
    </item>
    
  </channel>
</rss>