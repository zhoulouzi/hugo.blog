<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prometheus on Blog zhoulouzi</title>
    <link>https://blog.zhoulouzi.com/tags/prometheus/</link>
    <description>Recent content in Prometheus on Blog zhoulouzi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Apr 2017 21:48:15 +0800</lastBuildDate>
    
	<atom:link href="https://blog.zhoulouzi.com/tags/prometheus/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Prometheus vs influxDB</title>
      <link>https://blog.zhoulouzi.com/2017/04/prometheus/</link>
      <pubDate>Wed, 05 Apr 2017 21:48:15 +0800</pubDate>
      
      <guid>https://blog.zhoulouzi.com/2017/04/prometheus/</guid>
      <description>InfluxDB是一个由influxData开源的时序型数据库，Go编写，着力于高性能地查询与存储时序型数据，loT行业的实时数据等场景，influxDB在技术实现上充分利用了Go语言的特性，无需任何外部依赖即可独立部署。
prometheus是SoundCloud开源的监控警报系统，Go编写，主要特点是： 1. 多维度的数据模型(time series identified by metric name and key/value pairs) 2. promQL强大灵活的查询语言 3. 不依赖分布式存储 4. HTTP pull模式 收集 time series 这点跟influxdb的push模式不一样。 5. 通过pushgateway来支持push time series，适合short-lived job。 6. 可以通过服务发现或者静态配置scarpe目标 7. 支持多种模式的图形和仪表盘
Influxdb的查询语句类似SQL方便用户进行数据查询。这点prometheus是使用了promQL,这里有一个prometheus作者对Graphite, InfluxDB and Prometheus 三者的查询的对比。 Translating between monitoring languages
TICK stack这边的东西：
telegraf： {: width=&amp;ldquo;800px&amp;rdquo; height=&amp;ldquo;480px&amp;rdquo;}
概念: input,ouput,processor,aggerator
input： telegraf可以parse以下的数据格式到metrics 1. influxDB LIne Protocol 2. JSON 3. Graphite 4. value 举例: 45 or &amp;ldquo;abc&amp;rdquo; 5. nagios 6. collectd telegraf metircs 比如说 influxDB points(就像SQL的一个row)由以下4部分组成，其实这4个部分就是 influxDB line protocol： 1.</description>
    </item>
    
  </channel>
</rss>